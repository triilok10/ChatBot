@model ChatBot.Models.AIChat;
@{
    ViewData["Title"] = "AIDashBoard";
    Layout = null;
}

<link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
<script src="~/js/site.js" asp-append-version="true"></script>
<script src="~/js/toastr.min.js"></script>
<link href="~/js/toastr.min.css" rel="stylesheet" />
<style>

    .chat-container {
        display: flex;
        height: 100vh;
        padding: 10px;
    }


    .user-info {
        width: 25%;
        background-color: #f1f1f1;
        padding: 20px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        border-radius: 8px;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
    }

        .user-info button {
            border: none;
            background-color: #dc3545;
            color: white;
            padding: 5px 10px;
            border-radius: 5px;
            cursor: pointer;
        }

            .user-info button:hover {
                background-color: #c82333;
            }

        .user-info span {
            font-size: 16px;
            font-weight: bold;
            margin-bottom: 10px;
        }


    .chat-area {
        width: 75%;
        display: flex;
        flex-direction: column;
        overflow-y: auto;
        padding: 7%;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        background-color: #f9f9f9;
        border-radius: 8px;
        margin-left: 10px;
        border: 1px solid #ddd;
    }

        .chat-area h2 {
            text-align: center;
            font-size: 24px;
            color: #333;
            margin-bottom: 20px;
        }


    .chat-history {
        flex-grow: 1;
        margin-bottom: 10px;
    }


    .user-message, .bot-message {
        margin-bottom: 15px;
        /* max-width: 75%; */
        padding: 10px;
        border-radius: 10px;
    }

    .user-message {
        background-color: #007bff;
        color: white;
        align-self: flex-end;
    }

    .bot-message {
        background-color: #e0e0e0;
        color: #333;
        align-self: flex-start;
    }


    .chat-input-container {
        display: flex;
        justify-content: space-between;
        margin-top: 10px;
        padding: 10px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        border-radius: 8px;
        background-color: #fff;
    }

        .chat-input-container input {
            width: 85%;
            padding: 10px;
            border-radius: 20px;
            border: 1px solid #ddd;
        }

        .chat-input-container button {
            width: 12%;
            padding: 10px;
            border-radius: 20px;
            border: 1px solid #ddd;
            background-color: #007bff;
            color: white;
        }

            .chat-input-container button:hover {
                background-color: #0056b3;
            }


    @@media (max-width: 1024px) {
        .chat-container {
            flex-direction: column;
            height: 100vh;
        }

        .user-info {
            width: 100%;
            margin-bottom: 10px;
        }

        .chat-area {
            width: 100%;
            margin-left: 0;
            padding: 10%;
            height: 100vh;
        }

        .chat-input-container input {
            width: 75%;
        }

        .chat-input-container button {
            width: 20%;
        }
    }

    @@media (max-width: 768px) {
        .chat-container {
            flex-direction: column;
            height: 100vh;
        }

        .user-info {
            width: 100%;
            margin-bottom: 10px;
        }

        .chat-area {
            width: 100%;
            margin-left: 0;
            padding: 10%;
            height: 100vh;
        }

        .chat-input-container input {
            width: 75%;
        }

        .chat-input-container button {
            width: 20%;
        }

        .chat-area h2 {
            font-size: 20px;
        }
    }
</style>

<div class="chat-container">
    <div class="user-info">
        <span>User Info: @Model.UserName</span>
        <button onclick="logout()">Logout</button>
    </div>

    <div class="chat-area">
        <form id="chatForm" method="post" onsubmit="return handleSubmit(event)">
            <h2>AI Powered ChatBot</h2>
            <div class="chat-history" id="chatHistory"></div>

            <div class="chat-input-container">
                <input type="text" placeholder="Type a message..." id="userQuestion" required name="userQuestion" />
                <button type="submit">Send</button>
            </div>
            @Html.AntiForgeryToken()
        </form>
    </div>
</div>



<script type="text/javascript">

    window.onload = function () {

        const chatHistory = JSON.parse(localStorage.getItem('chatHistory')) || [];
        displayChatHistory(chatHistory);
    };




    async function handleSubmit(event) {
        event.preventDefault();

        const userQuestion = document.getElementById('userQuestion').value;
        const token = document.querySelector('input[name="__RequestVerificationToken"]').value;

        const chatEntry = { user: userQuestion, bot: '' };

        const response = await fetch('/AI/AskToChatBot', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'X-Requested-With': 'XMLHttpRequest'
            },
            body: JSON.stringify({ userQuestion: userQuestion })
        });

        if (response.ok) {
            const data = await response.json();


            if (data.rasaSolution != "") {
                const botResponse = data.rasaSolution;
                chatEntry.bot = botResponse;


                const chatHistory = JSON.parse(localStorage.getItem('chatHistory')) || [];
                chatHistory.push(chatEntry);
                localStorage.setItem('chatHistory', JSON.stringify(chatHistory));


                displayChatHistory(chatHistory);
            } else {
                console.error('No response from chatbot');
            }

            document.getElementById('userQuestion').value = '';
        } else {
            console.error('Error fetching chatbot response');
        }
    }

    // Function to display chat history in the UI
    function displayChatHistory(chatHistory) {
        const chatHistoryContainer = document.getElementById('chatHistory');
        chatHistoryContainer.innerHTML = '';

        chatHistory.forEach(entry => {
            const userMessage = document.createElement('div');
            userMessage.classList.add('user-message');
            userMessage.textContent = `${entry.user}`;

            const botMessage = document.createElement('div');
            botMessage.classList.add('bot-message');
            botMessage.textContent = `${entry.bot}`;

            chatHistoryContainer.appendChild(userMessage);
            chatHistoryContainer.appendChild(botMessage);
        });
    }

    function logout() {
        alert("Logging out...");
    }
</script>
